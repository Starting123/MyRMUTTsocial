rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Images and videos in posts folder
    match /posts/{postId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                   request.auth.uid == resource.metadata.uploadedBy;
      allow delete: if request.auth != null &&
                   (request.auth.uid == resource.metadata.uploadedBy ||
                    // Allow moderators/admins to delete content
                    exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                    (get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                     get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'moderator'));
    }

    // Profile pictures
    match /profiles/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                   request.auth.uid == userId;
      allow delete: if request.auth != null &&
                   request.auth.uid == userId;
    }

    // Group images
    match /groups/{groupId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                   exists(/databases/(default)/documents/groups/$(groupId)) &&
                   (get(/databases/(default)/documents/groups/$(groupId)).data.adminId == request.auth.uid ||
                    get(/databases/(default)/documents/groups/$(groupId)).data.moderators.hasAny([request.auth.uid]));
      allow delete: if request.auth != null &&
                   exists(/databases/(default)/documents/groups/$(groupId)) &&
                   (get(/databases/(default)/documents/groups/$(groupId)).data.adminId == request.auth.uid ||
                    get(/databases/(default)/documents/groups/$(groupId)).data.moderators.hasAny([request.auth.uid]));
    }

    // Chat attachments
    match /chats/{conversationId}/{allPaths=**} {
      allow read, write: if request.auth != null &&
                        exists(/databases/(default)/documents/conversations/$(conversationId)) &&
                        get(/databases/(default)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
    }

    // Block all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}